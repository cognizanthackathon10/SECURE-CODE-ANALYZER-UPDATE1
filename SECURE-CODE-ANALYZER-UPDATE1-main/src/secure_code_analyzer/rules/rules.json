[
  {
    "id": "JS-EVAL-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "\\beval\\s*\\(",
    "message": "Use of eval() can lead to code injection.",
    "suggestion": "Avoid eval(); use JSON.parse or pre-defined function maps."
  },
  {
    "id": "JS-EXEC-001",
    "language": "javascript",
    "category": "Command Execution",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "child_process\\.(exec|execSync)\\s*\\(",
    "message": "Use of exec may allow command injection if input is not sanitized.",
    "suggestion": "Use safer spawn with arg arrays; validate/whitelist inputs."
  },
  {
    "id": "JS-XSS-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "(innerHTML|outerHTML|document\\.write)\\s*=",
    "message": "Possible DOM-based XSS via unsafe sink.",
    "suggestion": "Use textContent instead of innerHTML; sanitize/encode inputs."
  },
  {
    "id": "JS-TIMEOUT-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "set(?:Timeout|Interval)\\s*\\(\\s*['\"]",
    "message": "Passing strings to setTimeout/setInterval executes code like eval().",
    "suggestion": "Use function references instead of strings."
  },
  {
    "id": "JS-CRYPTO-001",
    "language": "javascript",
    "category": "Weak Cryptography",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "crypto\\.createHash\\s*\\(\\s*['\\\"](md5|sha1)['\\\"]",
    "message": "Weak hash algorithm used.",
    "suggestion": "Use SHA-256/512 or password hashing like bcrypt/argon2."
  },
  {
    "id": "JS-ERROR-LEAK-001",
    "language": "javascript",
    "category": "Error Handling",
    "owasp": "A09:2021-Security Logging and Monitoring Failures",
    "severity": "LOW",
    "type": "regex",
    "pattern": "res\\.send\\s*\\(\\s*err(\\.stack)?\\s*\\)",
    "message": "Leaking errors/stacks to clients reveals sensitive info.",
    "suggestion": "Log errors server-side and return generic messages."
  },
  {
    "id": "JS-EVAL-AST-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "eval",
    "message": "eval() detected via AST; allows arbitrary code execution.",
    "suggestion": "Avoid eval(); use JSON.parse or predefined safe alternatives."
  },
  {
    "id": "JS-NEWFUNC-AST-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "NewExpression",
    "calleeName": "Function",
    "message": "Function constructor detected; unsafe dynamic code execution.",
    "suggestion": "Avoid new Function(); refactor to safe static functions."
  },
  {
    "id": "PHP-EVAL-001",
    "language": "php",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "\\beval\\s*\\(",
    "message": "Use of eval() can lead to code injection.",
    "suggestion": "Avoid eval(); use safer alternatives."
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "language": "php",
    "category": "Command Execution",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "@?\\s*(system|exec|shell_exec|passthru)\\s*\\(",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation."
  },
  {
    "id": "PHP-XSS-001",
    "language": "php",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "echo\\s+\\$_(GET|POST|REQUEST|COOKIE)\\b",
    "message": "Echoing unescaped user input can cause XSS.",
    "suggestion": "Encode output with htmlspecialchars and validate inputs."
  },
  {
    "id": "PHP-CRYPTO-001",
    "language": "php",
    "category": "Weak Cryptography",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "\\b(md5|sha1)\\s*\\(",
    "message": "Weak hash algorithm used.",
    "suggestion": "Use password_hash (bcrypt/argon2) or sodium/openssl strong hashes."
  },
  {
    "id": "PHP-ERROR-LEAK-001",
    "language": "php",
    "category": "Error Handling",
    "owasp": "A09:2021-Security Logging and Monitoring Failures",
    "severity": "LOW",
    "type": "regex",
    "pattern": "(var_dump|print_r|die|phpinfo)\\s*\\(",
    "message": "Leaking raw errors or phpinfo() reveals sensitive info.",
    "suggestion": "Log errors server-side and show generic error messages."
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "language": "php",
    "category": "Command Execution",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "call",
    "calleeName": "system",
    "message": "system() detected in PHP AST; may allow command injection.",
    "suggestion": "Avoid system(); use safer built-in APIs."
  },
  {
    "id": "PHP-EXEC-AST-001",
    "language": "php",
    "category": "Command Execution",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "call",
    "calleeName": "exec",
    "message": "exec() detected in PHP AST; may allow command injection.",
    "suggestion": "Avoid exec(); use safer built-in APIs."
  },
  {
    "id": "PHP-MYSQLI-001",
    "language": "php",
    "category": "SQL Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "@?\\s*mysqli_query\\s*\\(",
    "message": "Use of mysqli_query with untrusted input may lead to SQL Injection.",
    "suggestion": "Always use prepared statements (mysqli_stmt or PDO)."
  },
  {
    "id": "PHP-MYSQL-LEGACY-001",
    "language": "php",
    "category": "SQL Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "mysql_query\\s*\\(",
    "message": "Use of deprecated mysql_* API with untrusted input allows SQL Injection.",
    "suggestion": "Migrate to mysqli or PDO with prepared statements."
  },
  {
    "id": "PHP-INCLUDE-001",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "@?\\s*(include|require)(_once)?\\s*\\(",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists."
  },
  {
    "id": "PHP-FILE-READ-001",
    "language": "php",
    "category": "Path Traversal",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "@?\\s*file_get_contents\\s*\\(",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents."
  },
  {
    "id": "PHP-UNSERIALIZE-001",
    "language": "php",
    "category": "Insecure Deserialization",
    "owasp": "A08:2021-Software and Data Integrity Failures",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "unserialize\\s*\\(",
    "message": "Unserialize on untrusted input detected.",
    "suggestion": "Avoid unserialize(); use JSON instead, or validate strictly."
  },
  {
    "id": "PHP-MT-RAND-001",
    "language": "php",
    "category": "Weak Randomness",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "mt_rand\\s*\\(",
    "message": "Use of mt_rand() for security tokens is unsafe.",
    "suggestion": "Use random_int() or random_bytes() instead."
  },
  {
    "id": "PHP-ECB-001",
    "language": "php",
    "category": "Weak Cryptography",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "openssl_encrypt\\s*\\(.*ecb",
    "message": "ECB mode detected. It leaks patterns in ciphertext.",
    "suggestion": "Use AES-GCM or AES-CBC with random IVs."
  },
  {
    "id": "PHP-HARDCODED-CREDS-001",
    "language": "php",
    "category": "Hardcoded Secrets",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "define\\s*\\(\\s*['\"]DB_(HOST|USER|PASS|NAME)",
    "message": "Hardcoded DB credentials detected.",
    "suggestion": "Use environment variables or secrets manager."
  },
  {
    "id": "PHP-UPLOAD-001",
    "language": "php",
    "category": "Insecure File Upload",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "move_uploaded_file\\s*\\(",
    "message": "File upload without validation detected.",
    "suggestion": "Validate file type, size, extension; randomize name; store outside web root."
  },
  {
    "id": "PHP-SESSION-001",
    "language": "php",
    "category": "Session Management",
    "owasp": "A07:2021-Identification and Authentication Failures",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "setcookie\\s*\\(",
    "message": "Cookie set without Secure/HttpOnly/SameSite flags.",
    "suggestion": "Always set cookies with HttpOnly, Secure, and SameSite=strict."
  },
  {
    "id": "PHP-PREG-REPLACE-E-001",
    "language": "php",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "preg_replace\\s*\\([^)]*/e[^)]*\\)",
    "message": "preg_replace with /e modifier can execute code.",
    "suggestion": "Do not use /e; use preg_replace_callback instead."
  },
  {
    "id": "PHP-DL-001",
    "language": "php",
    "category": "Dangerous Function",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "dl\\s*\\(",
    "message": "dl() dynamically loads PHP extensions, unsafe in production.",
    "suggestion": "Do not use dl(); manage extensions in php.ini."
  },
  {
    "id": "PHP-SQLI-002",
    "language": "php",
    "category": "SQL Injection",
    "severity": "CRITICAL",
    "type": "regex",
    "pattern": "\\$_(GET|POST|REQUEST|COOKIE)\\s*\\[[^\\]]*\\][^;]*(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE)",
    "message": "Potential SQL injection vulnerability",
    "suggestion": "Use prepared statements or parameterized queries. Validate all inputs.",
    "cwe": "CWE-89",
    "owasp": "A03:2021-Injection"
  },
  {
    "id": "JS-DOMXSS-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "\\.innerHTML\\s*=\\s*[^;]*(location\\.search|window\\.location|document\\.URL)",
    "message": "Potential DOM-based XSS vulnerability",
    "suggestion": "Use textContent or sanitize input (e.g. DOMPurify).",
    "cwe": "CWE-79",
    "owasp": "A03:2021-Injection"
  },
  {
    "id": "JS-DOCWRITE-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "severity": "HIGH",
    "type": "regex",
    "pattern": "document\\.write\\s*\\([^)]*(location\\.search|window\\.location|document\\.URL)",
    "message": "document.write with user-controlled data",
    "suggestion": "Avoid document.write(); use DOM APIs and sanitize input.",
    "cwe": "CWE-79",
    "owasp": "A03:2021-Injection"
  },
  {
    "id": "JS-WEAK-RNG-001",
    "language": "javascript",
    "category": "Weak Randomness",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "Math\\.random\\s*\\(",
    "message": "Weak randomness with Math.random()",
    "suggestion": "Use crypto.getRandomValues() instead.",
    "cwe": "CWE-338",
    "owasp": "A02:2021-Cryptographic Failures"
  },
  {
    "id": "JS-CONSOLE-001",
    "language": "javascript",
    "category": "Information Disclosure",
    "severity": "LOW",
    "type": "regex",
    "pattern": "console\\.(log|debug|info|warn|error)",
    "message": "Console logging detected",
    "suggestion": "Remove console statements in production.",
    "cwe": "CWE-200",
    "owasp": "A09:2021-Security Logging and Monitoring Failures"
  },
  {
    "id": "JS-LOCALSTORAGE-001",
    "language": "javascript",
    "category": "Sensitive Data Exposure",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "(localStorage|sessionStorage)\\.setItem\\([^)]*(password|token|key|secret)",
    "message": "Sensitive data stored in browser storage",
    "suggestion": "Do not store secrets in localStorage/sessionStorage. Use HttpOnly cookies.",
    "cwe": "CWE-922",
    "owasp": "A02:2021-Cryptographic Failures"
  },
  {
    "id": "JS-REDIRECT-001",
    "language": "javascript",
    "category": "Open Redirect",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "window\\.location(\\.href)?\\s*=\\s*[^;]*(location\\.search|window\\.location)",
    "message": "Potential open redirect",
    "suggestion": "Validate redirect URLs against a whitelist.",
    "cwe": "CWE-601",
    "owasp": "A01:2021-Broken Access Control"
  },
  {
    "id": "JS-POSTMESSAGE-001",
    "language": "javascript",
    "category": "Message Handling",
    "severity": "MEDIUM",
    "type": "regex",
    "pattern": "window\\.addEventListener\\s*\\(\\s*['\"]message['\"].*\\)",
    "message": "postMessage listener without origin validation",
    "suggestion": "Always validate event.origin before handling messages.",
    "cwe": "CWE-346",
    "owasp": "A07:2021-Identification and Authentication Failures"
  },
  {
    "id": "JS-DOMXSS-AST-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "sources": ["document.location", "window.location", "location.search"],
    "message": "User input flows into innerHTML assignment → DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify."
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "system",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "system() called with user input → Command Injection.",
    "suggestion": "Avoid system(); use built-in APIs."
  },
  {
    "id": "PHP-EXEC-AST-001",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "exec",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "exec() called with user input → Command Injection.",
    "suggestion": "Avoid exec(); use built-in APIs."
  },
  {
    "id": "PHP-UNSERIALIZE-AST-001",
    "language": "php",
    "category": "Insecure Deserialization",
    "owasp": "A08:2021-Software and Data Integrity Failures",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "unserialize",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "unserialize() on user input → Insecure Deserialization.",
    "suggestion": "Do not unserialize untrusted input. Use JSON."
  },
  {
  "id": "PHP-AUTH-CHECK-001",
  "language": "php",
  "category": "Broken Access Control",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "\\$_(GET|POST|REQUEST)\\s*\\[.*(role|admin|auth).*\\]",
  "message": "Access control decision appears to be based on user input.",
  "suggestion": "Enforce server-side authorization using session or token checks.",
  "owasp": "A01:2021-Broken Access Control"
},
{
  "id": "JS-CLIENT-AUTH-001",
  "language": "javascript",
  "category": "Broken Access Control",
  "severity": "MEDIUM",
  "type": "regex",
  "pattern": "if\\s*\\([^)]*user.*role[^)]*\\)",
  "message": "Authorization logic found in client-side code. This can be bypassed.",
  "suggestion": "Do not rely on client-side authorization checks.",
  "owasp": "A01:2021-Broken Access Control"
},
{
  "id": "PHP-HARDCODED-SECRET-002",
  "language": "php",
  "category": "Insecure Design",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "(secret|apikey|token)\\s*=\\s*['\\\"]",
  "message": "Hardcoded secret or token detected.",
  "suggestion": "Use environment variables or a secrets manager.",
  "owasp": "A04:2021-Insecure Design"
},
{
  "id": "JS-DISABLE-CSP-001",
  "language": "javascript",
  "category": "Insecure Design",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "Content-Security-Policy.*unsafe-inline",
  "message": "CSP with unsafe-inline detected. This weakens XSS protection.",
  "suggestion": "Avoid unsafe-inline; use nonces or hashes in CSP.",
  "owasp": "A04:2021-Insecure Design"
},
{
  "id": "JS-JQUERY-OLD-001",
  "language": "javascript",
  "category": "Outdated Components",
  "severity": "MEDIUM",
  "type": "regex",
  "pattern": "jquery-1\\.[0-9]+\\.[0-9]+",
  "message": "Old jQuery version detected. Likely vulnerable to XSS.",
  "suggestion": "Upgrade to latest jQuery version.",
  "owasp": "A06:2021-Vulnerable and Outdated Components"
},
{
  "id": "PHP-OUTDATED-MYSQL-001",
  "language": "php",
  "category": "Outdated Components",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "mysql_connect\\s*\\(",
  "message": "Use of deprecated mysql_connect() detected.",
  "suggestion": "Migrate to PDO or mysqli with prepared statements.",
  "owasp": "A06:2021-Vulnerable and Outdated Components"
},
{
  "id": "PHP-SSRF-001",
  "language": "php",
  "category": "SSRF",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "(curl_exec|file_get_contents|fopen)\\s*\\([^)]*http",
  "message": "Potential SSRF: fetching external URL without validation.",
  "suggestion": "Validate and whitelist remote URLs before requesting.",
  "owasp": "A10:2021-SSRF"
},
{
  "id": "JS-SSRF-001",
  "language": "javascript",
  "category": "SSRF",
  "severity": "HIGH",
  "type": "regex",
  "pattern": "fetch\\s*\\([^)]*http",
  "message": "Potential SSRF via fetch() with external input.",
  "suggestion": "Validate and restrict request URLs against an allowlist.",
  "owasp": "A10:2021-SSRF"
},
{
    "id": "JS-SETTIMEOUT-AST-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "setTimeout",
    "message": "setTimeout called with string argument → code execution risk.",
    "suggestion": "Use function references instead of strings."
  },
  {
    "id": "JS-SETINTERVAL-AST-001",
    "language": "javascript",
    "category": "Dangerous Function",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "setInterval",
    "message": "setInterval called with string argument → code execution risk.",
    "suggestion": "Use function references instead of strings."
  },
  {
    "id": "JS-DOCWRITE-AST-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "document.write",
    "message": "document.write with dynamic input → possible DOM XSS.",
    "suggestion": "Avoid document.write(); use DOM APIs and sanitize input."
  },
  {
    "id": "JS-POSTMESSAGE-AST-001",
    "language": "javascript",
    "category": "Message Handling",
    "owasp": "A07:2021-Identification and Authentication Failures",
    "severity": "MEDIUM",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "postMessage",
    "message": "window.postMessage without origin validation detected.",
    "suggestion": "Always validate event.origin in message listeners."
  },
  {
    "id": "PHP-UNSERIALIZE-AST-001",
    "language": "php",
    "category": "Insecure Deserialization",
    "owasp": "A08:2021-Software and Data Integrity Failures",
    "severity": "CRITICAL",
    "type": "ast",
    "nodeType": "call",
    "calleeName": "unserialize",
    "message": "unserialize() called in AST. Dangerous with untrusted input.",
    "suggestion": "Avoid unserialize(); prefer JSON or validate inputs."
  },
  {
    "id": "PHP-INCLUDE-AST-001",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "include",
    "calleeName": "include/require",
    "message": "Dynamic include/require detected.",
    "suggestion": "Never use user input in include/require paths. Use whitelists."
  },
  {
    "id": "PHP-SETCOOKIE-AST-001",
    "language": "php",
    "category": "Session Management",
    "owasp": "A07:2021-Identification and Authentication Failures",
    "severity": "MEDIUM",
    "type": "ast",
    "nodeType": "call",
    "calleeName": "setcookie",
    "message": "Cookie set without Secure/HttpOnly/SameSite may be unsafe.",
    "suggestion": "Always set cookies with HttpOnly, Secure, and SameSite=strict."
  },
  {
    "id": "PHP-SYSTEM-TAINT-001",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "system",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "system() called with user input → Command Injection.",
    "suggestion": "Avoid system(); use safer APIs or sanitize inputs."
  },
  {
    "id": "PHP-EXEC-TAINT-001",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "exec",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "exec() called with user input → Command Injection.",
    "suggestion": "Avoid exec(); use safer APIs or sanitize inputs."
  },
  {
    "id": "PHP-MYSQLI-TAINT-001",
    "language": "php",
    "category": "SQL Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "mysqli_query",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "mysqli_query() with user input → SQL Injection.",
    "suggestion": "Always use prepared statements (mysqli_stmt or PDO)."
  },
  {
    "id": "PHP-INCLUDE-TAINT-001",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "include",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "include() with user input → Local/Remote File Inclusion.",
    "suggestion": "Never include user-controlled paths."
  },
  {
    "id": "PHP-UNSERIALIZE-TAINT-001",
    "language": "php",
    "category": "Insecure Deserialization",
    "owasp": "A08:2021-Software and Data Integrity Failures",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "unserialize",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "message": "unserialize() on user input → Insecure Deserialization.",
    "suggestion": "Do not unserialize untrusted input. Use JSON instead."
  },
  {
    "id": "JS-EVAL-TAINT-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "eval",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "location.search", "localStorage", "sessionStorage"],
    "message": "eval() with user input → Remote Code Execution.",
    "suggestion": "Avoid eval(); use JSON.parse or safe parsers."
  },
  {
    "id": "JS-INNERHTML-TAINT-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "location.search", "document.URL", "localStorage", "sessionStorage"],
    "message": "User input flows into innerHTML → DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify."
  },
  {
    "id": "JS-DOCWRITE-TAINT-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "document.write",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "location.search", "document.URL"],
    "message": "document.write() with user input → DOM XSS.",
    "suggestion": "Avoid document.write(); use DOM APIs and sanitize input."
  },
  {
    "id": "JS-SETTIMEOUT-TAINT-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "setTimeout",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "location.search", "localStorage"],
    "message": "setTimeout() with user-controlled string → Code Execution.",
    "suggestion": "Always pass function references, not strings."
  },
  {
    "id": "JS-REDIRECT-TAINT-001",
    "language": "javascript",
    "category": "Open Redirect",
    "owasp": "A01:2021-Broken Access Control",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "window.location",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "location.search"],
    "message": "Unvalidated user input in redirect → Open Redirect.",
    "suggestion": "Validate URLs against a whitelist."
  },
  {
    "id": "PHP-MOVE-UPLOAD-TAINT-001",
    "language": "php",
    "category": "Insecure File Upload",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "move_uploaded_file",
    "requiresTaint": true,
    "sources": ["$_FILES"],
    "message": "move_uploaded_file() without validation allows arbitrary file upload.",
    "suggestion": "Validate file type, size, and use randomized safe paths."
  },
  {
    "id": "PHP-HEADER-TAINT-001",
    "language": "php",
    "category": "HTTP Response Splitting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "header",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "header() with user input may lead to HTTP Response Splitting.",
    "suggestion": "Never pass raw user input to header()."
  },{
  "id": "JS-TIMEOUT-AST-001",
  "language": "javascript",
  "category": "Dangerous Function",
  "owasp": "A03:2021-Injection",
  "severity": "HIGH",
  "type": "ast",
  "nodeType": "CallExpression",
  "calleeName": "setTimeout",
  "argIsString": true,
  "message": "setTimeout called with a string → dynamic code execution like eval().",
  "suggestion": "Pass a function reference instead of a string."
},
{
  "id": "JS-INTERVAL-AST-001",
  "language": "javascript",
  "category": "Dangerous Function",
  "owasp": "A03:2021-Injection",
  "severity": "HIGH",
  "type": "ast",
  "nodeType": "CallExpression",
  "calleeName": "setInterval",
  "argIsString": true,
  "message": "setInterval called with a string → dynamic code execution like eval().",
  "suggestion": "Pass a function reference instead of a string."
},
{
  "id": "JS-LOCALSTORAGE-AST-001",
  "language": "javascript",
  "category": "Sensitive Data Exposure",
  "owasp": "A02:2021-Cryptographic Failures",
  "severity": "MEDIUM",
  "type": "context-ast",
  "nodeType": "CallExpression",
  "calleeName": "setItem",
  "objectName": "localStorage",
  "sources": ["password", "token", "key", "secret"],
  "message": "Sensitive data stored in localStorage/sessionStorage.",
  "suggestion": "Use HttpOnly cookies or secure storage, not local/sessionStorage."
},
{
  "id": "JS-REDIRECT-AST-001",
  "language": "javascript",
  "category": "Open Redirect",
  "owasp": "A01:2021-Broken Access Control",
  "severity": "MEDIUM",
  "type": "context-ast",
  "nodeType": "AssignmentExpression",
  "calleeName": "window.location",
  "sources": ["document.location", "window.location", "location.search"],
  "message": "User-controlled data flows into window.location → Open Redirect.",
  "suggestion": "Validate redirect URLs against a whitelist."
},{
  "id": "PHP-MYSQLI-AST-001",
  "language": "php",
  "category": "SQL Injection",
  "owasp": "A03:2021-Injection",
  "severity": "CRITICAL",
  "type": "context-ast",
  "nodeType": "call",
  "calleeName": "mysqli_query",
  "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
  "message": "mysqli_query called with user input → SQL Injection.",
  "suggestion": "Always use prepared statements (mysqli_stmt or PDO)."
},
{
  "id": "PHP-INCLUDE-AST-001",
  "language": "php",
  "category": "File Inclusion",
  "owasp": "A05:2021-Security Misconfiguration",
  "severity": "HIGH",
  "type": "context-ast",
  "nodeType": "include",
  "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
  "message": "Dynamic include/require with user input → LFI/RFI.",
  "suggestion": "Never include user input in file paths; use whitelisted constants."
},
{
  "id": "PHP-FILE-READ-AST-001",
  "language": "php",
  "category": "Path Traversal",
  "owasp": "A05:2021-Security Misconfiguration",
  "severity": "HIGH",
  "type": "context-ast",
  "nodeType": "call",
  "calleeName": "file_get_contents",
  "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
  "message": "file_get_contents called with user input → Path Traversal.",
  "suggestion": "Never pass unvalidated input to file_get_contents."
},
{
  "id": "PHP-PREG-REPLACE-AST-001",
  "language": "php",
  "category": "Dangerous Function",
  "owasp": "A03:2021-Injection",
  "severity": "HIGH",
  "type": "ast",
  "nodeType": "call",
  "calleeName": "preg_replace",
  "patternCheck": "/e",
  "message": "preg_replace with /e modifier executes code → RCE risk.",
  "suggestion": "Use preg_replace_callback instead of /e."
},
{
  "id": "php-unserialize-user-input",
  "language": "php",
  "category": "deserialization",
  "owasp": "A08:2021 – Software and Data Integrity Failures",
  "severity": "high",
  "type": "regex",
  "pattern": "unserialize\\s*\\(\\s*\\$_(GET|POST|REQUEST)\\s*\\[.?\\]\\s\\)",
  "message": "Untrusted user input passed into unserialize() can lead to PHP Object Injection.",
  "suggestion": "Avoid unserialize() on user input. Use JSON with strict validation instead."
},
{
  "id": "php-preg-replace-eval",
  "language": "php",
  "category": "code-execution",
  "owasp": "A03:2021 – Injection",
  "severity": "critical",
  "type": "regex",
  "pattern": "preg_replace\\s*\\(.?/e.?,",
  "message": "Use of preg_replace with the /e modifier allows remote code execution.",
  "suggestion": "Remove /e modifier. Use preg_replace_callback instead."
},
{
  "id": "php-include-user-input",
  "language": "php",
  "category": "file-inclusion",
  "owasp": "A05:2021 – Security Misconfiguration",
  "severity": "critical",
  "type": "regex",
  "pattern": "(include|require)(once)?\\s*\\(\\s*\\$(GET|POST|REQUEST)\\s*\\[.?\\]\\s\\)",
  "message": "Dynamic file inclusion with user input may lead to LFI/RFI.",
  "suggestion": "Never pass user input directly into include/require. Use whitelists."
},
{
  "id": "php-header-injection",
  "language": "php",
  "category": "injection",
  "owasp": "A01:2021 – Broken Access Control",
  "severity": "high",
  "type": "regex",
  "pattern": "header\\s*\\(\\s*[\"']Location:.*\\$_(GET|POST|REQUEST)",
  "message": "Unvalidated redirects via header() can lead to Open Redirect or CRLF Injection.",
  "suggestion": "Sanitize and validate redirect URLs. Use a fixed set of allowed destinations."
},
{
  "id": "js-dangerously-set-innerhtml",
  "language": "javascript",
  "category": "xss",
  "owasp": "A03:2021 – Injection",
  "severity": "high",
  "type": "ast",
  "nodeType": "JSXAttribute",
  "attributeName": "dangerouslySetInnerHTML",
  "message": "Usage of dangerouslySetInnerHTML can lead to Cross-Site Scripting (XSS).",
  "suggestion": "Avoid dangerouslySetInnerHTML. Use safe templating libraries or sanitize HTML."
},
{
  "id": "js-localstorage-sensitive-data",
  "language": "javascript",
  "category": "sensitive-data-exposure",
  "owasp": "A02:2021 – Cryptographic Failures",
  "severity": "medium",
  "type": "regex",
  "pattern": "localStorage\\.setItem\\s*\\(\\s*['\"](password|passwd|secret|token)['\"]",
  "message": "Storing sensitive data like passwords or tokens in localStorage is insecure.",
  "suggestion": "Use secure HTTP-only cookies or encrypted storage mechanisms."
},
{
  "id": "js-child-process-exec",
  "language": "javascript",
  "category": "code-execution",
  "owasp": "A03:2021 – Injection",
  "severity": "critical",
  "type": "regex",
  "pattern": "child_process\\.exec\\s*\\(",
  "message": "Use of child_process.exec() with user input may allow remote command execution.",
  "suggestion": "Use safer alternatives like execFile with strict input validation."
},
{
  "id": "js-fs-path-traversal",
  "language": "javascript",
  "category": "path-traversal",
  "owasp": "A05:2021 – Security Misconfiguration",
  "severity": "high",
  "type": "regex",
  "pattern": "fs\\.(readFile|writeFile|appendFile)\\s*\\(\\s*req\\.(query|body|params)",
  "message": "Passing user input directly into fs operations may lead to path traversal attacks.",
  "suggestion": "Validate and sanitize file paths. Never use raw user input for filesystem access."
},
{
  "id": "js-insecure-jwt-decode",
  "language": "javascript",
  "category": "authentication",
  "owasp": "A07:2021 – Identification and Authentication Failures",
  "severity": "high",
  "type": "regex",
  "pattern": "jwt\\.decode\\s*\\(",
  "message": "Using jwt.decode() without verifying the signature is insecure.",
  "suggestion": "Use jwt.verify() instead of jwt.decode() for authentication flows."
},
{
  "id": "js-insecure-tls",
  "language": "javascript",
  "category": "cryptographic-failures",
  "owasp": "A02:2021 – Cryptographic Failures",
  "severity": "high",
  "type": "regex",
  "pattern": "rejectUnauthorized\\s*:\\s*false",
  "message": "Disabling TLS verification leaves the app vulnerable to MITM attacks.",
  "suggestion": "Always set rejectUnauthorized to true for production systems."
},
{
  "id": "js-regex-dos",
  "language": "javascript",
  "category": "denial-of-service",
  "owasp": "A09:2021 – Security Logging and Monitoring Failures",
  "severity": "medium",
  "type": "regex",
  "pattern": "\\(a\\+\\)\\+",
  "message": "Detected potentially vulnerable regex pattern (ReDoS).",
  "suggestion": "Refactor regex to avoid catastrophic backtracking."
},
{
  "id": "js-outerhtml-assignment",
  "language": "javascript",
  "category": "xss",
  "owasp": "A03:2021 – Injection",
  "severity": "high",
  "type": "ast",
  "nodeType": "AssignmentExpression",
  "propertyName": "outerHTML",
  "message": "Assignment to outerHTML with user input can lead to Cross-Site Scripting (XSS).",
  "suggestion": "Use textContent or sanitize input before assigning to outerHTML."
},
{
  "id": "js-insertadjacenthtml",
  "language": "javascript",
  "category": "xss",
  "owasp": "A03:2021 – Injection",
  "severity": "high",
  "type": "ast",
  "nodeType": "CallExpression",
  "calleeName": "insertAdjacentHTML",
  "message": "Usage of insertAdjacentHTML with unsanitized input can lead to Cross-Site Scripting (XSS).",
  "suggestion": "Sanitize HTML or avoid insertAdjacentHTML."
},
{
  "id": "js-window-location-assign",
  "language": "javascript",
  "category": "open-redirect",
  "owasp": "A01:2021 – Broken Access Control",
  "severity": "high",
  "type": "ast",
  "nodeType": "AssignmentExpression",
  "propertyName": "location",
  "message": "Assignment to window.location with unsanitized input can lead to open redirect attacks.",
  "suggestion": "Validate destination URLs or use a whitelist."
},
{
  "id": "js-document-cookie-assign",
  "language": "javascript",
  "category": "xss",
  "owasp": "A03:2021 – Injection",
  "severity": "medium",
  "type": "ast",
  "nodeType": "AssignmentExpression",
  "propertyName": "cookie",
  "message": "Direct assignment to document.cookie may allow persistent XSS or session hijacking.",
  "suggestion": "Avoid setting cookies via JS. Use HttpOnly and Secure flags in server-set cookies."
},
{
  "id": "php-eval-nonliteral",
  "language": "php",
  "category": "code-execution",
  "owasp": "A03:2021 – Injection",
  "severity": "critical",
  "type": "ast",
  "nodeType": "FunctionCall",
  "calleeName": "eval",
  "argumentType": "variable",
  "message": "Use of eval() with a non-literal argument can lead to remote code execution.",
  "suggestion": "Avoid eval(). If dynamic code execution is unavoidable, strictly validate inputs."
},
{
  "id": "php-system-exec-taint",
  "language": "php",
  "category": "command-injection",
  "owasp": "A03:2021 – Injection",
  "severity": "critical",
  "type": "context-ast",
  "nodeType": "FunctionCall",
  "calleeName": "system",
  "requiresTaint": true,
  "sources": ["$_GET", "$_POST", "$_REQUEST"],
  "message": "User input passed directly to system() may allow OS command injection.",
  "suggestion": "Avoid system() with untrusted data. Use escapeshellarg/escapeshellcmd and strict validation."
},{
    "id": "JS-EVAL-TAINT-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "eval",
    "requiresTaint": true,
    "sources": ["req.query", "req.body", "document.location", "window.location", "localStorage"],
    "message": "User-controlled input passed into eval(), leading to RCE.",
    "suggestion": "Avoid eval(); use safe parsing or whitelisted function maps."
  },
  {
    "id": "JS-INNERHTML-TAINT-001",
    "language": "javascript",
    "category": "DOM XSS",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "assignment",
    "propertyName": "innerHTML",
    "requiresTaint": true,
    "sources": ["req.query", "req.body", "document.location", "window.location", "localStorage"],
    "message": "User-controlled input written into innerHTML may cause XSS.",
    "suggestion": "Use textContent instead, or sanitize input before inserting into DOM."
  },
  {
    "id": "JS-FETCH-SSRF-002",
    "language": "javascript",
    "category": "SSRF",
    "owasp": "A10:2021-Server-Side Request Forgery",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "fetch",
    "requiresTaint": true,
    "sources": ["req.query", "req.body"],
    "message": "fetch() called with user input as URL → possible SSRF.",
    "suggestion": "Restrict allowed domains and validate URLs before making requests."
  },
  {
    "id": "PHP-EXEC-TAINT-001",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": ["exec", "system", "shell_exec", "passthru", "popen"],
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "User input passed to system command execution function.",
    "suggestion": "Never pass unsanitized input to system commands; use escapeshellarg or safer APIs."
  },
  {
    "id": "PHP-HEADER-TAINT-002",
    "language": "php",
    "category": "HTTP Response Splitting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "header",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "User input in header() may lead to HTTP response splitting.",
    "suggestion": "Validate and sanitize all input passed to header()."
  },
  {
    "id": "PHP-CURL-SSRF-002",
    "language": "php",
    "category": "SSRF",
    "owasp": "A10:2021-Server-Side Request Forgery",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": ["curl_exec", "file_get_contents"],
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "Untrusted input flows into network request function → SSRF possible.",
    "suggestion": "Validate and whitelist URLs before making external requests."
  },
  {
    "id": "PHP-FILE-INCLUDE-TAINT-001",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": ["include", "require", "include_once", "require_once"],
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "User-controlled file path in include/require may lead to LFI/RFI.",
    "suggestion": "Never allow raw input in file paths; use whitelists or constants."
  },{
    "id": "JS-DOC-WRITE-TAINT-001",
    "language": "javascript",
    "category": "DOM XSS",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "document.write",
    "requiresTaint": true,
    "sources": ["document.location", "window.location", "req.query", "req.body"],
    "message": "document.write() with user input allows XSS.",
    "suggestion": "Avoid document.write(); use DOM APIs with sanitized content."
  },
  {
    "id": "JS-SETTIMEOUT-TAINT-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": ["setTimeout", "setInterval"],
    "requiresTaint": true,
    "sources": ["req.query", "req.body", "document.location"],
    "message": "User-controlled strings in setTimeout/setInterval can lead to code execution.",
    "suggestion": "Pass function references instead of strings."
  },
  {
    "id": "JS-LOCALSTORAGE-TAINT-001",
    "language": "javascript",
    "category": "Sensitive Data Exposure",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "MEDIUM",
    "type": "context-ast",
    "nodeType": "assignment",
    "objectName": "localStorage",
    "requiresTaint": true,
    "sources": ["req.body.password", "req.body.token"],
    "message": "Sensitive data stored in localStorage can be stolen via XSS.",
    "suggestion": "Avoid storing tokens/passwords in localStorage; use HttpOnly cookies."
  },{
    "id": "PHP-MYSQL-QUERY-TAINT-001",
    "language": "php",
    "category": "SQL Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": ["mysql_query", "mysqli_query", "pg_query"],
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "User input flows into raw SQL execution function.",
    "suggestion": "Use prepared statements with parameterized queries."
  },
  {
    "id": "PHP-UNSERIALIZE-TAINT-001",
    "language": "php",
    "category": "Object Injection",
    "owasp": "A08:2021-Software and Data Integrity Failures",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "unserialize",
    "requiresTaint": true,
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "message": "Untrusted input passed into unserialize() may allow object injection.",
    "suggestion": "Avoid unserialize() on untrusted data; use JSON instead."
  },
  {
    "id": "PHP-MOVE-UPLOAD-TAINT-001",
    "language": "php",
    "category": "Unrestricted File Upload",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "call",
    "calleeName": "move_uploaded_file",
    "requiresTaint": true,
    "sources": ["$_FILES"],
    "message": "File uploaded without proper checks → may lead to RCE.",
    "suggestion": "Validate file type, enforce safe directory, and rename uploaded files."
  },{
    "id": "JS-CTX-001",
    "language": "javascript",
    "type": "context-ast",
    "category": "DOM XSS",
    "severity": "HIGH",
    "message": "Assignment to innerHTML with user-controlled data.",
    "suggestion": "Avoid assigning untrusted data to innerHTML. Use safe DOM methods or sanitization.",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "sources": ["document.cookie", "location", "window.name", "localStorage", "sessionStorage", "req", "input"]
  },
  {
    "id": "JS-CTX-002",
    "language": "javascript",
    "type": "context-ast",
    "category": "Code Injection",
    "severity": "CRITICAL",
    "message": "Dangerous dynamic code execution (Function, setTimeout, setInterval) with untrusted input.",
    "suggestion": "Avoid passing untrusted input to code execution APIs. Validate or remove such usage.",
    "nodeType": "CallExpression",
    "calleeName": "setTimeout",
    "sources": ["document.cookie", "location", "req", "input"]
  },
  {
    "id": "JS-CTX-003",
    "language": "javascript",
    "type": "context-ast",
    "category": "Code Injection",
    "severity": "CRITICAL",
    "message": "Dynamic function creation from untrusted input.",
    "suggestion": "Do not use new Function with untrusted data.",
    "nodeType": "NewExpression",
    "calleeName": "Function",
    "sources": ["document.cookie", "location", "req", "input"]
  },
  {
    "id": "PHP-CTX-001",
    "language": "php",
    "type": "context-ast",
    "category": "File Inclusion",
    "severity": "CRITICAL",
    "message": "File include/require uses untrusted input.",
    "suggestion": "Do not include files based on user input. Use whitelisted paths.",
    "nodeType": "include",
    "sources": ["$_GET", "$_POST", "$_REQUEST"]
  },
  {
    "id": "PHP-CTX-002",
    "language": "php",
    "type": "context-ast",
    "category": "Command Injection",
    "severity": "CRITICAL",
    "message": "Command execution with user input.",
    "suggestion": "Avoid passing user input into system(), exec(), or similar.",
    "nodeType": "call",
    "calleeName": "system",
    "sources": ["$_GET", "$_POST", "$_REQUEST"]
  },{
    "id": "JS-DOMXSS-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "sources": ["location.hash", "location.search", "document.location"],
    "message": "User input flows into innerHTML → DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify."
  },
  {
    "id": "JS-DOMXSS-002",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "insertAdjacentHTML",
    "sources": ["location.search"],
    "message": "User input flows into insertAdjacentHTML → DOM XSS.",
    "suggestion": "Use DOM APIs safely or sanitize with DOMPurify."
  },
  {
    "id": "JS-DOMXSS-003",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "write",
    "objectName": "document",
    "sources": ["SRC.html"],
    "message": "User input passed to document.write → DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods."
  },
  {
    "id": "JS-EVAL-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "eval",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions."
  },
  {
    "id": "JS-FUNCTION-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "ast",
    "nodeType": "NewExpression",
    "calleeName": "Function",
    "message": "Use of Function constructor is dangerous.",
    "suggestion": "Avoid Function(); use safer alternatives."
  },
  {
    "id": "JS-SETTIMEOUT-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "setTimeout",
    "message": "setTimeout with string executes code.",
    "suggestion": "Use function callbacks instead of string arguments."
  },
  {
    "id": "JS-OPENREDIRECT-001",
    "language": "javascript",
    "category": "Open Redirect",
    "owasp": "A01:2021-Broken Access Control",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "href",
    "sources": ["SRC.target"],
    "message": "User input assigned to location.href → Open Redirect.",
    "suggestion": "Validate URLs against an allowlist."
  },
  {
    "id": "JS-FETCH-001",
    "language": "javascript",
    "category": "Data Exfiltration",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "fetch",
    "sources": ["SRC.url"],
    "message": "User-controlled fetch() with credentials → sensitive data exfiltration.",
    "suggestion": "Validate destination URLs and avoid credentials: 'include' with untrusted URLs."
  },
  {
    "id": "JS-LOCALSTORAGE-001",
    "language": "javascript",
    "category": "Sensitive Data Exposure",
    "owasp": "A02:2021-Cryptographic Failures",
    "severity": "MEDIUM",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "setItem",
    "objectName": "localStorage",
    "sources": ["token"],
    "message": "Sensitive data stored in localStorage.",
    "suggestion": "Use HttpOnly cookies instead."
  },
  {
    "id": "JS-COOKIE-001",
    "language": "javascript",
    "category": "Weak Cookie Flags",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "MEDIUM",
    "type": "ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "cookie",
    "objectName": "document",
    "message": "Cookies set without Secure/SameSite → insecure.",
    "suggestion": "Always set Secure, HttpOnly, SameSite."
  },
  {
    "id": "JS-RANDOM-001",
    "language": "javascript",
    "category": "Insecure Randomness",
    "owasp": "A09:2021-Security Logging and Monitoring Failures",
    "severity": "LOW",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "random",
    "objectName": "Math",
    "message": "Math.random() used for security token → predictable.",
    "suggestion": "Use crypto.getRandomValues() instead."
  },
  {
    "id": "JS-PROTOTYPE-001",
    "language": "javascript",
    "category": "Prototype Pollution",
    "owasp": "A08:2021-Insecure Deserialization",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "JSON.parse",
    "sources": ["SRC.json"],
    "message": "User-controlled JSON merged → Prototype Pollution.",
    "suggestion": "Block __proto__ and constructor keys."
  },
  {
    "id": "JS-HANDLER-001",
    "language": "javascript",
    "category": "Event Handler Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "setAttribute",
    "sources": ["SRC.code"],
    "message": "Untrusted input assigned to event handler → Code execution.",
    "suggestion": "Do not set inline event handlers from untrusted input."
  },
  {
    "id": "JS-REDOS-001",
    "language": "javascript",
    "category": "ReDoS",
    "owasp": "A06:2021-Vulnerable and Outdated Components",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "NewExpression",
    "calleeName": "RegExp",
    "sources": ["SRC.re"],
    "message": "User-controlled regex pattern may cause ReDoS.",
    "suggestion": "Validate regex input or use safe-regex libraries."
  },
  {
    "id": "JS-POSTMESSAGE-001",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "ast",
    "nodeType": "CallExpression",
    "calleeName": "eval",
    "message": "Dangerous use of eval() inside postMessage handler.",
    "suggestion": "Validate origin and sanitize message data."
  },
  {
    "id": "JS-HREFHTML-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "sources": ["SRC.url"],
    "message": "User-controlled href inserted into innerHTML → DOM XSS.",
    "suggestion": "Use safe DOM APIs and validate URLs."
  },
  {
    "id": "JS-STYLE-001",
    "language": "javascript",
    "category": "CSS Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "setAttribute",
    "sources": ["SRC.html"],
    "message": "Untrusted input flows into style attribute → CSS Injection.",
    "suggestion": "Validate or sanitize style values."
  },
  {
    "id": "JS-HEADERS-001",
    "language": "javascript",
    "category": "Header Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "CallExpression",
    "calleeName": "fetch",
    "sources": ["SRC.msg"],
    "message": "User input flows into HTTP header value → Header Injection.",
    "suggestion": "Validate header values before use."
  },
  {
    "id": "JS-INNERHTML-PLUS-001",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "innerHTML",
    "sources": ["SRC.html"],
    "message": "innerHTML += with user input → DOM XSS.",
    "suggestion": "Avoid innerHTML concatenation; use DOM APIs."
  },
  {
    "id": "JS-JSURL-001",
    "language": "javascript",
    "category": "JavaScript URL Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "context-ast",
    "nodeType": "AssignmentExpression",
    "calleeName": "href",
    "sources": ["SRC.url"],
    "message": "User-controlled javascript: URL assigned to href → XSS.",
    "suggestion": "Disallow javascript: schemes in URLs."
  },{
    "id": "GEN-HEUR-001",
    "language": "javascript",
    "type": "heuristic",
    "category": "Debugging",
    "pattern": "console\\.log",
    "severity": "LOW",
    "message": "Debug logging function found (console.log).",
    "suggestion": "Remove debug statements before deploying to production.",
    "owasp": "A10:2021 - Logging & Monitoring Failures"
  },
  {
    "id": "PHP-HEUR-002",
    "language": "php",
    "type": "heuristic",
    "category": "Debugging",
    "pattern": "var_dump|print_r|die\\(",
    "severity": "LOW",
    "message": "Debugging functions found in PHP code.",
    "suggestion": "Remove debug functions before deploying to production.",
    "owasp": "A10:2021 - Logging & Monitoring Failures"
  },
  {
    "id": "GEN-HEUR-003",
    "language": "javascript",
    "type": "heuristic",
    "category": "Secrets",
    "pattern": "api[_-]?key|secret|password|token",
    "severity": "HIGH",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021 - Cryptographic Failures"
  },
  {
    "id": "PHP-HEUR-004",
    "language": "php",
    "type": "heuristic",
    "category": "Permissions",
    "pattern": "chmod\\(.*777",
    "severity": "MEDIUM",
    "message": "File permission set to 777 (world-writable).",
    "suggestion": "Restrict permissions to the minimum required (e.g., 640 or 750).",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-005",
    "language": "javascript",
    "type": "heuristic",
    "category": "Insecure Config",
    "pattern": "NODE_TLS_REJECT_UNAUTHORIZED\\s*=\\s*['\"]?0['\"]?",
    "severity": "HIGH",
    "message": "TLS certificate validation is disabled.",
    "suggestion": "Enable TLS verification to prevent MITM attacks.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "PHP-HEUR-006",
    "language": "php",
    "type": "heuristic",
    "category": "Insecure Config",
    "pattern": "CURLOPT_SSL_VERIFYPEER\\s*,\\s*false",
    "severity": "HIGH",
    "message": "SSL peer verification is disabled in cURL.",
    "suggestion": "Enable CURLOPT_SSL_VERIFYPEER to ensure secure HTTPS connections.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-007",
    "language": "javascript",
    "type": "heuristic",
    "category": "Suspicious Comments",
    "pattern": "TODO|FIXME|HACK|TEMP|WORKAROUND",
    "severity": "LOW",
    "message": "Suspicious comment keyword found.",
    "suggestion": "Review and resolve temporary or insecure code.",
    "owasp": "A10:2021 - Logging & Monitoring Failures"
  },
  {
    "id": "GEN-HEUR-008",
    "language": "javascript",
    "type": "heuristic",
    "category": "Obfuscation",
    "pattern": "[A-Za-z0-9+/]{100,}={0,2}",
    "severity": "MEDIUM",
    "message": "Large base64/encoded string detected (possible obfuscation).",
    "suggestion": "Review encoded content for hidden payloads.",
    "owasp": "A04:2021 - Insecure Design"
  },
  {
    "id": "GEN-HEUR-009",
    "language": "php",
    "type": "heuristic",
    "category": "Secrets",
    "pattern": "define\\(['\"]?(DB_PASSWORD|DB_USER|DB_HOST)['\"]?",
    "severity": "HIGH",
    "message": "Hardcoded database credentials detected.",
    "suggestion": "Store DB credentials in environment variables or secure vault.",
    "owasp": "A02:2021 - Cryptographic Failures"
  },
  {
    "id": "GEN-HEUR-010",
    "language": "javascript",
    "type": "heuristic",
    "category": "Weak Crypto",
    "pattern": "md5\\(|sha1\\(",
    "severity": "MEDIUM",
    "message": "Weak cryptographic function detected (MD5/SHA1).",
    "suggestion": "Use SHA-256, SHA-3, or stronger hashing algorithms.",
    "owasp": "A02:2021 - Cryptographic Failures"
  },
  {
    "id": "PHP-HEUR-011",
    "language": "php",
    "type": "heuristic",
    "category": "Weak Crypto",
    "pattern": "md5\\(|sha1\\(",
    "severity": "MEDIUM",
    "message": "Weak cryptographic function detected in PHP.",
    "suggestion": "Use password_hash() or libsodium for secure hashing.",
    "owasp": "A02:2021 - Cryptographic Failures"
  },
  {
    "id": "GEN-HEUR-012",
    "language": "javascript",
    "type": "heuristic",
    "category": "Exception Handling",
    "pattern": "catch\\s*\\(.*\\)\\s*\\{\\s*\\}",
    "severity": "LOW",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021 - Security Logging and Monitoring Failures"
  },
  {
    "id": "PHP-HEUR-013",
    "language": "php",
    "type": "heuristic",
    "category": "Error Handling",
    "pattern": "error_reporting\\(0\\)|ini_set\\(['\"]display_errors['\"],\\s*['\"]Off['\"]\\)",
    "severity": "LOW",
    "message": "Error reporting suppressed.",
    "suggestion": "Do not disable error reporting completely; log securely instead.",
    "owasp": "A09:2021 - Security Logging and Monitoring Failures"
  },
  {
    "id": "GEN-HEUR-014",
    "language": "javascript",
    "type": "heuristic",
    "category": "Hardcoded URLs",
    "pattern": "http://",
    "severity": "MEDIUM",
    "message": "Use of insecure HTTP URL.",
    "suggestion": "Always use HTTPS instead of HTTP.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-015",
    "language": "php",
    "type": "heuristic",
    "category": "Hardcoded URLs",
    "pattern": "http://",
    "severity": "MEDIUM",
    "message": "Use of insecure HTTP URL in PHP.",
    "suggestion": "Always use HTTPS instead of HTTP.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-016",
    "language": "javascript",
    "type": "heuristic",
    "category": "Temporary Files",
    "pattern": "tmp|temp",
    "severity": "LOW",
    "message": "Use of temporary files detected.",
    "suggestion": "Ensure temporary files are not world-accessible.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-017",
    "language": "php",
    "type": "heuristic",
    "category": "File Handling",
    "pattern": "fopen\\(|fwrite\\(",
    "severity": "MEDIUM",
    "message": "Direct file operations detected.",
    "suggestion": "Validate file paths and use secure file APIs.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },
  {
    "id": "GEN-HEUR-018",
    "language": "javascript",
    "type": "heuristic",
    "category": "Obfuscation",
    "pattern": "eval\\(atob\\(",
    "severity": "HIGH",
    "message": "Obfuscated eval with base64 decode detected.",
    "suggestion": "Avoid obfuscation techniques that hide malicious code.",
    "owasp": "A08:2021 - Software Integrity Failures"
  },
  {
    "id": "GEN-HEUR-019",
    "language": "php",
    "type": "heuristic",
    "category": "Insecure Functions",
    "pattern": "create_function\\(",
    "severity": "HIGH",
    "message": "Deprecated and insecure function create_function() used.",
    "suggestion": "Use anonymous functions instead.",
    "owasp": "A08:2021 - Software Integrity Failures"
  },
  {
    "id": "GEN-HEUR-020",
    "language": "javascript",
    "type": "heuristic",
    "category": "Suspicious Variables",
    "pattern": "document\\.cookie",
    "severity": "HIGH",
    "message": "Access to document.cookie detected (risk of XSS).",
    "suggestion": "Avoid using document.cookie directly; use secure storage.",
    "owasp": "A07:2021 - Identification and Authentication Failures"
  },
  {
    "id": "PHP-HEUR-021",
    "language": "php",
    "type": "heuristic",
    "category": "Superglobals",
    "pattern": "\\$_REQUEST",
    "severity": "MEDIUM",
    "message": "Use of PHP superglobal $_REQUEST detected.",
    "suggestion": "Use $_GET or $_POST explicitly and validate input.",
    "owasp": "A01:2021 - Broken Access Control"
  },
  {
    "id": "GEN-HEUR-022",
    "language": "javascript",
    "type": "heuristic",
    "category": "Suspicious Functions",
    "pattern": "setTimeout\\(|setInterval\\(",
    "severity": "LOW",
    "message": "Dynamic code execution may be used inside setTimeout/setInterval.",
    "suggestion": "Avoid passing strings to setTimeout/setInterval.",
    "owasp": "A06:2021 - Vulnerable and Outdated Components"
  },
  {
    "id": "PHP-HEUR-023",
    "language": "php",
    "type": "heuristic",
    "category": "Session Handling",
    "pattern": "session_start\\(",
    "severity": "LOW",
    "message": "Session start detected, ensure secure flags are set.",
    "suggestion": "Use secure session cookies (HttpOnly, Secure, SameSite).",
    "owasp": "A07:2021 - Identification and Authentication Failures"
  },
  {
    "id": "GEN-HEUR-024",
    "language": "javascript",
    "type": "heuristic",
    "category": "Deprecated APIs",
    "pattern": "document\\.write",
    "severity": "MEDIUM",
    "message": "document.write() is dangerous and deprecated.",
    "suggestion": "Use DOM manipulation APIs instead.",
    "owasp": "A06:2021 - Vulnerable and Outdated Components"
  },
  {
    "id": "PHP-HEUR-025",
    "language": "php",
    "type": "heuristic",
    "category": "Insecure Config",
    "pattern": "allow_url_fopen\\s*=\\s*On",
    "severity": "HIGH",
    "message": "allow_url_fopen is enabled, may allow RFI attacks.",
    "suggestion": "Disable allow_url_fopen unless absolutely necessary.",
    "owasp": "A05:2021 - Security Misconfiguration"
  },{
    "id": "PHP-HARDCODED-CREDS-001",
    "language": "php",
    "type": "heuristic",
    "pattern": "\\$username\\s*=\\s*['\\\"]root['\\\"]",
    "severity": "HIGH",
    "category": "Sensitive Info Disclosure",
    "message": "Hardcoded database username detected.",
    "suggestion": "Use environment variables or config files instead of hardcoding credentials.",
    "owasp": "A05:2021-Security Misconfiguration",
    "cwe": "CWE-798"
  },
  {
    "id": "PHP-NO-DB-ERROR-HANDLING-001",
    "language": "php",
    "type": "heuristic",
    "pattern": "new\\s+mysqli\\(",
    "severity": "MEDIUM",
    "category": "Error Handling",
    "message": "Database connection created without proper error handling.",
    "suggestion": "Always wrap database connections in try/catch and log errors securely.",
    "owasp": "A09:2021-Security Logging and Monitoring Failures",
    "cwe": "CWE-252"
  },
  {
    "id": "PHP-SQL-INJECTION-001",
    "language": "php",
    "type": "heuristic",
    "pattern": "\\$sql\\s*=\\s*\\\"SELECT.*\\$_GET",
    "severity": "CRITICAL",
    "category": "Injection",
    "message": "Possible SQL injection detected with unsanitized user input in SQL query.",
    "suggestion": "Use prepared statements or parameterized queries instead of directly embedding user input.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-89"
  },{
    "id": "JS-EVAL-TAINT",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-95",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "window.location", "document.cookie"],
    "sinks": ["eval", "Function", "setTimeout", "setInterval"],
    "message": "User-controlled input flows into eval() or dynamic code execution.",
    "suggestion": "Avoid eval()/Function; use JSON.parse or predefined function maps."
  },
  {
    "id": "PHP-EVAL-TAINT",
    "language": "php",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-95",
    "severity": "CRITICAL",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE", "$_SERVER"],
    "sinks": ["eval", "system", "exec", "shell_exec", "passthru", "popen"],
    "message": "User-controlled input flows into a dangerous PHP function.",
    "suggestion": "Avoid dangerous functions with raw user input. Sanitize or use safer APIs."
  },
  {
    "id": "PHP-SQL-TAINT",
    "language": "php",
    "category": "SQL Injection",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-89",
    "severity": "CRITICAL",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["mysql_query", "mysqli_query", "pdo->query", "->exec"],
    "message": "User-controlled input flows into SQL query without sanitization.",
    "suggestion": "Use prepared statements (parameterized queries)."
  },
  {
    "id": "JS-DOM-XSS-TAINT",
    "language": "javascript",
    "category": "Cross-Site Scripting",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "location.hash", "document.cookie"],
    "sinks": ["innerHTML", "document.write"],
    "message": "User-controlled input flows into DOM sinks (XSS).",
    "suggestion": "Use textContent or proper encoding instead of innerHTML/document.write."
  },{
    "id": "JS-CMD-TAINT",
    "language": "javascript",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-78",
    "severity": "CRITICAL",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "window.location", "document.cookie"],
    "sinks": ["child_process.exec", "child_process.execSync", "child_process.spawn", "child_process.spawnSync"],
    "message": "User-controlled input flows into OS command execution.",
    "suggestion": "Avoid passing user input to shell commands. Use safe libraries or parameterized APIs."
  },
  {
    "id": "JS-FS-TAINT",
    "language": "javascript",
    "category": "File Inclusion / Path Traversal",
    "owasp": "A05:2021-Security Misconfiguration",
    "cwe": "CWE-22",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "window.location", "document.cookie"],
    "sinks": ["fs.readFile", "fs.readFileSync", "fs.writeFile", "fs.writeFileSync", "fs.appendFile"],
    "message": "User-controlled input flows into file system operations (possible path traversal).",
    "suggestion": "Validate and whitelist file paths before access."
  },
  {
    "id": "JS-HTTP-TAINT",
    "language": "javascript",
    "category": "SSRF",
    "owasp": "A10:2021-SSRF",
    "cwe": "CWE-918",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "document.cookie"],
    "sinks": ["http.get", "http.request", "axios.get", "axios.post", "fetch"],
    "message": "User-controlled input flows into HTTP requests (SSRF).",
    "suggestion": "Restrict user-controlled URLs or use allowlists."
  },{
    "id": "PHP-FILE-TAINT",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A05:2021-Security Misconfiguration",
    "cwe": "CWE-98",
    "severity": "CRITICAL",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["include", "include_once", "require", "require_once"],
    "message": "User-controlled input flows into file include/require.",
    "suggestion": "Do not include files based on user input. Use static paths."
  },
  {
    "id": "PHP-FS-TAINT",
    "language": "php",
    "category": "File Path Traversal",
    "owasp": "A05:2021-Security Misconfiguration",
    "cwe": "CWE-22",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["fopen", "file_get_contents", "file_put_contents", "unlink"],
    "message": "User-controlled input flows into filesystem operations (Path Traversal).",
    "suggestion": "Whitelist and validate file paths."
  },
  {
    "id": "PHP-HEADER-TAINT",
    "language": "php",
    "category": "HTTP Response Splitting",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-113",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["header"],
    "message": "User-controlled input flows into header(), enabling HTTP response splitting.",
    "suggestion": "Sanitize header values before usage."
  },{
    "id": "JS-EVAL-TAINT",
    "language": "javascript",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "window.location", "document.cookie", "userInput"],
    "sinks": ["eval"],
    "message": "User input flows into eval(), leading to possible code execution.",
    "suggestion": "Avoid eval(); use safer parsing like JSON.parse."
  },
  {
    "id": "JS-INNERHTML-TAINT",
    "language": "javascript",
    "category": "Cross-Site Scripting (XSS)",
    "owasp": "A07:2021-XSS",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["req.query", "req.body", "window.location", "document.cookie", "userInput"],
    "sinks": ["innerHTML"],
    "message": "User input flows into innerHTML, enabling DOM-based XSS.",
    "suggestion": "Use textContent or proper sanitization libraries."
  },{
    "id": "PHP-EVAL-TAINT",
    "language": "php",
    "category": "Code Injection",
    "owasp": "A03:2021-Injection",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["eval"],
    "message": "User input flows into eval(), enabling code injection.",
    "suggestion": "Avoid eval() entirely; use safer alternatives."
  },
  {
    "id": "PHP-CMD-TAINT",
    "language": "php",
    "category": "Command Injection",
    "owasp": "A03:2021-Injection",
    "severity": "CRITICAL",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["system", "exec", "shell_exec", "passthru", "popen"],
    "message": "User input flows into system/exec functions, leading to command injection.",
    "suggestion": "Never pass raw user input to system commands. Use escapeshellcmd or better, avoid these APIs."
  },
  {
    "id": "PHP-INCLUDE-TAINT",
    "language": "php",
    "category": "File Inclusion",
    "owasp": "A05:2021-Security Misconfiguration",
    "severity": "HIGH",
    "type": "taint-ast",
    "sources": ["$_GET", "$_POST", "$_REQUEST", "$_COOKIE"],
    "sinks": ["include", "require", "include_once", "require_once"],
    "message": "User input flows into include/require, leading to File Inclusion vulnerability.",
    "suggestion": "Validate/whitelist included files and disable remote includes."
  },{
    "id": "PHP-EVAL-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Code Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["eval"],
    "message": "User-controlled input flows into eval(), allowing arbitrary code execution.",
    "suggestion": "Avoid using eval() with user input. Use safer alternatives like include/require or parsing."
  },
  {
    "id": "PHP-SYSTEM-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Command Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["system"],
    "message": "User input flows into system(), leading to command injection.",
    "suggestion": "Validate and sanitize input or use safer APIs. Use escapeshellarg() when necessary."
  },
  {
    "id": "PHP-EXEC-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Command Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["exec"],
    "message": "User input flows into exec(), leading to command injection.",
    "suggestion": "Do not pass raw user input to exec(). Validate input or use safer APIs."
  },
  {
    "id": "PHP-SHELL-EXEC-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Command Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["shell_exec"],
    "message": "User input flows into shell_exec(), leading to command injection.",
    "suggestion": "Avoid shell_exec(). Use built-in PHP functions instead of executing shell commands."
  },
  {
    "id": "PHP-PASSTHRU-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Command Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["passthru"],
    "message": "User input flows into passthru(), leading to command injection.",
    "suggestion": "Do not use passthru() with user input. Consider safer alternatives."
  },
  {
    "id": "PHP-POPEN-TAINT",
    "language": "php",
    "type": "taint-ast",
    "severity": "HIGH",
    "category": "Command Injection",
    "sources": ["$_GET", "$_POST", "$_REQUEST"],
    "sinks": ["popen"],
    "message": "User input flows into popen(), leading to command injection.",
    "suggestion": "Avoid popen(). If absolutely necessary, sanitize input strictly."
  }

  
]
